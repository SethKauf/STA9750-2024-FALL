[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "My first website!",
    "section": "",
    "text": "Hi all, my name is Seth, I’m in the MS Statistics program at Baruch.\nI have some data science experience having taken a bootcamp in 2021 and having worked in the field since completing it.\nI’m in 3 classes this semester, one of which is making me learn and write a lot of math notation in markdown real fast, \\(\\log\\times\\Pr[D_{train}]=\\prod_{i=1}^n(f_1(x_i)^{y_i} \\times f_0(x_i)^{1-y_i})\\times\\log=\\sum_{i=1}^n\\log(f_1(x_i)^{y_i}\\times f_0(x_i)^{1-y_i})\\) was a fun one. \\(k\\in\\Re\\) looks pretty cool, too.\nAnyways, I really like transit data, my first major project was analyzing and predicting train delays on the NYC Subway. I wrote a short blog about gathering MTA data from their Alerts webpage.\nI also am interested in sports data, for example, I want to do a project on how Shot Attempts affect a game and whether they truly matter (something broadcasters cried to the heavens they did this past NHL Stanley Cup Playoffs).\nMy lukewarm take on modern data science, there’s a lot of hype around AI and rightfully so, but I feel there’s some disconnect between what we call AI and what people think of AI. It seems we’re still pretty far from things like autonomous robots, as cool as Bender might be.\n\n\n\nlinked from GIPHY\n\n\nFeel free to direct message me on Piazza or GitHub if you want to connect.\nLooking forward to a great semester!"
  },
  {
    "objectID": "mp01.html",
    "href": "mp01.html",
    "title": "Mini Project 1",
    "section": "",
    "text": "This project for STA 9750 has us looking at Federal Transit Administration Data, specifically for 2022.\nWe will try to answer some questions about transit from that year in this file."
  },
  {
    "objectID": "docs/mp01.html",
    "href": "docs/mp01.html",
    "title": "Task 1: Rename column UZA Name to metro_area",
    "section": "",
    "text": "library(tidyverse) library(DT)\nFARES &lt;- readxl::read_xlsx(“2022_fare_revenue.xlsx”) |&gt; select(-State/Parent NTD ID, -Reporter Type, -Reporting Module, -TOS, -Passenger Paid Fares, -Organization Paid Fares) |&gt; filter(Expense Type == “Funds Earned During Period”) |&gt; select(-Expense Type)\nEXPENSES &lt;- readr::read_csv(“2022_expenses.csv”) |&gt; select(NTD ID, Agency, Total, Mode) |&gt; mutate(NTD ID = as.integer(NTD ID)) |&gt; rename(Expenses = Total) |&gt; group_by(NTD ID, Mode) |&gt; summarize(Expenses = sum(Expenses)) |&gt; ungroup()\nFINANCIALS &lt;- inner_join(FARES, EXPENSES, join_by(NTD ID, Mode))\nTRIPS &lt;- readxl::read_xlsx(“ridership.xlsx”, sheet=“UPT”) |&gt; filter(Mode/Type of Service Status == “Active”) |&gt; select(-Legacy NTD ID, -Reporter Type, -Mode/Type of Service Status, -UACE CD, -TOS) |&gt; pivot_longer(-c(NTD ID:3 Mode), names_to=“month”, values_to=“UPT”) |&gt; drop_na() |&gt; mutate(month=my(month)) # Parse _m_onth _y_ear date specs\nMILES &lt;- readxl::read_xlsx(“ridership.xlsx”, sheet=“VRM”) |&gt; filter(Mode/Type of Service Status == “Active”) |&gt; select(-Legacy NTD ID, -Reporter Type, -Mode/Type of Service Status, -UACE CD, -TOS) |&gt; pivot_longer(-c(NTD ID:3 Mode), names_to=“month”, values_to=“VRM”) |&gt; drop_na() |&gt; group_by(NTD ID, Agency, UZA Name, Mode, 3 Mode, month) |&gt; summarize(VRM = sum(VRM)) |&gt; ungroup() |&gt; mutate(month=my(month)) # Parse _m_onth _y_ear date specs\nUSAGE &lt;- inner_join(TRIPS, MILES) |&gt; mutate(NTD ID = as.integer(NTD ID))\nsample_n(USAGE, 1000) |&gt; mutate(month=as.character(month)) |&gt; # DT::datatable()\nhead(USAGE,n=5)\n\nTask 1: Rename column UZA Name to metro_area\nlibrary(dplyr)\ncolnames(USAGE)\nUSAGE &lt;- USAGE |&gt; rename(“metro_area” = “UZA Name”)\ncolnames(USAGE)\n\n\nTask 2: Find unique Modes, impute with a more understandable value using case-when\nhead(USAGE) USAGE |&gt; distinct(Mode) |&gt; arrange(Mode)\nUSAGE &lt;- USAGE |&gt; mutate(Mode=case_when( Mode == “AR” ~ “Alaska Railroad”, Mode == “CB” ~ “Commuter Bus”, Mode == “CC” ~ “Cable Car”, Mode == “CR” ~ “Commuter Rail”, Mode == “DR” ~ “Demand Response”, Mode == “FB” ~ “Ferryboat”, Mode == “HR” ~ “Heavy Rail”, Mode == “IP” ~ “Inclined Plane”, Mode == “LR” ~ “Light Rail”, Mode == “MB” ~ “Bus”, Mode == “MG” ~ “Monorail and Automated Guideway modes”, Mode == “PB” ~ “Publico”, Mode == “RB” ~ “Bus Rapid Transit”, Mode == “SR” ~ “Streetcar Rail”, Mode == “TB” ~ “Trolleybus”, Mode == “TR” ~ “Aerial Tramways”, Mode == “VP” ~ “Vanpool”, Mode == “YR” ~ “Hybrid Rail”, TRUE ~ “Unknown”)) USAGE\nhead(USAGE) USAGE |&gt; distinct(Mode) |&gt; arrange(Mode)\nUSAGE &lt;- USAGE |&gt; rename( “unlinked_passenger_trips” = “UPT”, “vehicle_revenue_miles” = “VRM”) |&gt; select( -NTD ID, -3 Mode)\nlibrary(DT)\nsample_n(USAGE, 1000) |&gt; mutate(month=as.character(month)) |&gt; DT::datatable()\n\n\nTask 3: Answer specific questions\nhead(USAGE)\n#3.1: Which transit agency had the most total VRM in this sample? # A grouped summarize that takes the first returned item in descending order should get that USAGE |&gt; group_by(Agency) |&gt; summarize(n_vrm = n()) |&gt; arrange(desc(n_vrm)) |&gt; slice_head(n=1)\n\n\nAnswer: New Jersey Transit Corporation with 2,048\n\n\n3.2: Which transit mode had the most total VRM in this sample?\n\n\nSame code as 3.1 but replacing Agency with Mode\nUSAGE |&gt; group_by(Mode) |&gt; summarize(n_vrm = n()) |&gt; arrange(desc(n_vrm)) |&gt; slice_head(n=1)\n\n\nAnswer: Demand Response with 115,701\n\n\n3.3: How many trips were taken on the NYC Subway (Heavy Rail) in May 2024?\n#install.packages(“stringr”) library(stringr)\n\n\nFirst checking to ensure that May 2024 is only denoted by 2024-05-01\nUSAGE |&gt; filter(str_detect(month, “2024-05-”)) |&gt; distinct(month) #checks out\n\n\nEnsuring I get the right Agency name\nUSAGE |&gt; filter(str_detect(Agency,“MTA”)) |&gt; distinct(Agency)\n\n\nUnlinked Passenger Trips (UPT) are defined as:\n\n\nThe number of passengers who board public transportation vehicles.\n\n\nPassengers are counted each time they board vehicles\n\n\nno matter how many vehicles they use to travel from their origin\n\n\nto their destination.\nUSAGE |&gt; filter(month == ‘2024-05-01’, Agency == “MTA New York City Transit”, Mode == “Heavy Rail”) |&gt; select(unlinked_passenger_trips) #Answer: 180,458,819 trips\n\n\n3.4: Which Mode of transport had the longest average trip in May 2024?\nUSAGE |&gt; filter(month == ‘2024-05-01’) |&gt; group_by(Mode) |&gt; summarize(trips_avg = mean(unlinked_passenger_trips)) |&gt; arrange(desc(trips_avg)) |&gt; slice_head(n=1)\n\n\nAnswer: Heavy Rail, with 14,836,486 average trips\n\n\nI did this question before 3.4 was marked as unneccesary due to not having the correct feature to run this analysis\n\n\nBut I’ve left it in regardless\n\n\n3.5: How much did NYC Subway ridership fall between April 2019 and April 2020?\nUSAGE |&gt; filter(Agency == “MTA New York City Transit”, Mode == “Heavy Rail”, month &gt;= ‘2019-04-01’, month &lt; ‘2020-05-01’) |&gt; select(unlinked_passenger_trips)\n\n\nLet’s plot the ridership numbers\nlibrary(ggplot2) library(lubridate)\ndates &lt;- seq(ymd(“2019-04-01”), by = “month”, length.out = 13) ridership &lt;- c(USAGE |&gt; filter(month &gt;= ‘2019-04-01’, month &lt; ‘2020-05-01’, Agency == ‘MTA New York City Transit’, Mode == ‘Heavy Rail’))\n\n\nCreate a data frame\ndata &lt;- data.frame(Date = dates, Ridership = ridership)\n\n\ninstall.packages(“scales”)\nlibrary(scales)\n\n\nPlot ridership over time\nggplot(data, aes(x = Date, y = Ridership.unlinked_passenger_trips)) + # Change x and y accordingly geom_line() + geom_point() + labs(title = “NYC Subway Ridership from April 2019 through April 2020”, x = “Date”, y = “Total Trips”) + scale_y_continuous(labels = label_number()) + # Prevent scientific notation theme_minimal() + theme( plot.title = element_text(hjust = 0.5, size = 16, face = “bold”), # Center the title and make it bold axis.title.x = element_text(size = 14), # Change x-axis title size axis.title.y = element_text(size = 14), # Change y-axis title size axis.text = element_text(size = 12), # Change axis text size panel.grid.minor = element_blank() # Remove minor grid lines )\n\n\nTask 4: Find 3 more interesting facts in this data\nhead(USAGE, n=7)\n\n\n4.1: What’s the most miles traveled by agency + mode and how does it compare to the number of trips?\nUSAGE |&gt; group_by(Agency, Mode) |&gt; summarize(total_travel = sum(vehicle_revenue_miles, na.rm = TRUE), .groups=“drop”) |&gt; arrange(desc(total_travel)) |&gt; slice_head(n=3) # NYC Subway leads the way in revenue miles, followed by NJT Bus and LA Bus\nUSAGE |&gt; group_by(Agency, Mode) |&gt; summarize(total_travel = sum(unlinked_passenger_trips, na.rm = TRUE), .groups=“drop”) |&gt; arrange(desc(total_travel)) |&gt; slice_head(n=3) # NYC Subway leads the way here as well, while NJT Bus is overtaken by NYC’s bus system # The distance between the MTA and the next few is quite large\n\n\n4.2 Which Agency manages the most Modes?\nUSAGE |&gt; group_by(Agency) |&gt; summarize(total_modes = n_distinct(Mode)) |&gt; arrange(desc(total_modes)) # Massachusetts Bay Transportation Authority\n\n\n4.3 Which date saw the most usage for the NYC Subway?\nUSAGE |&gt; filter(Agency == ‘MTA New York City Transit’, Mode == ‘Heavy Rail’) |&gt; group_by(month) |&gt; summarize(most_trips = sum(unlinked_passenger_trips, na.rm = TRUE)) |&gt; arrange(desc(most_trips)) |&gt; slice_head(n=1) # 2019-10-01\n\n\nconversely, which had the fewest?\nUSAGE |&gt; filter(Agency == ‘MTA New York City Transit’, Mode == ‘Heavy Rail’) |&gt; group_by(month) |&gt; summarize(most_trips = sum(unlinked_passenger_trips, na.rm = TRUE)) |&gt; arrange((most_trips)) |&gt; slice_head(n=1) # 2020-04-01\n\n\nTask 5: Create a new table with annual total (sum) for UPT and VRM for 2022\nUSAGE &lt;- inner_join(TRIPS, MILES) |&gt; mutate(NTD ID = as.integer(NTD ID))\nUSAGE &lt;- USAGE |&gt; mutate(Mode=case_when( Mode == “AR” ~ “Alaska Railroad”, Mode == “CB” ~ “Commuter Bus”, Mode == “CC” ~ “Cable Car”, Mode == “CR” ~ “Commuter Rail”, Mode == “DR” ~ “Demand Response”, Mode == “FB” ~ “Ferryboat”, Mode == “HR” ~ “Heavy Rail”, Mode == “IP” ~ “Inclined Plane”, Mode == “LR” ~ “Light Rail”, Mode == “MB” ~ “Bus”, Mode == “MG” ~ “Monorail and Automated Guideway modes”, Mode == “PB” ~ “Publico”, Mode == “RB” ~ “Bus Rapid Transit”, Mode == “SR” ~ “Streetcar Rail”, Mode == “TB” ~ “Trolleybus”, Mode == “TR” ~ “Aerial Tramways”, Mode == “VP” ~ “Vanpool”, Mode == “YR” ~ “Hybrid Rail”, TRUE ~ “Unknown”))\nUSAGE_2022_ANNUAL &lt;- USAGE |&gt; select(-3 Mode) |&gt; rename(“metro_area” = “UZA Name”) |&gt; filter(year(month)==‘2022’) |&gt; group_by(NTD ID, Agency,metro_area,Mode) |&gt; summarize(UPT = sum(UPT), VRM = sum(VRM)) |&gt; ungroup()\nhead(USAGE_2022_ANNUAL, n=2)\nFINANCIALS &lt;- FINANCIALS |&gt; mutate(Mode=case_when( Mode == “AR” ~ “Alaska Railroad”, Mode == “CB” ~ “Commuter Bus”, Mode == “CC” ~ “Cable Car”, Mode == “CR” ~ “Commuter Rail”, Mode == “DR” ~ “Demand Response”, Mode == “FB” ~ “Ferryboat”, Mode == “HR” ~ “Heavy Rail”, Mode == “IP” ~ “Inclined Plane”, Mode == “LR” ~ “Light Rail”, Mode == “MB” ~ “Bus”, Mode == “MG” ~ “Monorail and Automated Guideway modes”, Mode == “PB” ~ “Publico”, Mode == “RB” ~ “Bus Rapid Transit”, Mode == “SR” ~ “Streetcar Rail”, Mode == “TB” ~ “Trolleybus”, Mode == “TR” ~ “Aerial Tramways”, Mode == “VP” ~ “Vanpool”, Mode == “YR” ~ “Hybrid Rail”, TRUE ~ “Unknown”))\nUSAGE_AND_FINANCIALS &lt;- left_join(USAGE_2022_ANNUAL, FINANCIALS, join_by(NTD ID, Mode)) |&gt; drop_na()\nUSAGE_AND_FINANCIALS\n\n\nTask 6: Answer the following 6 questions using USAGE_AND_FINANCIALS\n\n\n6.1: Which transit system (agency and mode) had the most UPT in 2022?\nUSAGE_AND_FINANCIALS |&gt; group_by(Agency, Mode) |&gt; summarize(Total_UPT = sum(UPT, na.rm=TRUE), .groups=“drop”) |&gt; arrange(desc(Total_UPT)) |&gt; slice_head(n=1) # MTA New York City Transit – Heavy Rail\n\n\n6.2: Which transit system (agency and mode) had the highest farebox recovery,\n\n\ndefined as the highest ratio of Total Fares to Expenses?\nUSAGE_AND_FINANCIALS |&gt; group_by(Agency,Mode) |&gt; summarize(fbx_rcv = sum(Total Fares, na.rm = TRUE) / sum(Expenses, na.rm = TRUE), .groups=“drop”) |&gt; arrange(desc(fbx_rcv)) |&gt; slice_head(n=1) # Transit Authority of Central Kentucky – Vanpool\n\n\n6.3: Which transit system (agency and mode) had the lowest expenses per UPT?\nUSAGE_AND_FINANCIALS |&gt; filter(UPT &gt;= 1) |&gt; group_by(Agency,Mode) |&gt; summarize(lwst_exp_upt = sum(Expenses, na.rm = TRUE) / sum(UPT, na.rm = TRUE), .groups=“drop”) |&gt; arrange(lwst_exp_upt) |&gt; slice_head(n=1) # North Caroline State University – Bus\n\n\n6.4: Which transit system (agency and mode) had the highest total fares per UPT?\nUSAGE_AND_FINANCIALS |&gt; filter(Total Fares &gt;= 1) |&gt; group_by(Agency,Mode) |&gt; summarize(hghst_fr_upt = sum(UPT, na.rm = TRUE) / sum(Total Fares, na.rm = TRUE), .groups=“drop”) |&gt; # summarize(hghst_fr_upt = sum(UPT, na.rm = TRUE) / sum(Total Fares, na.rm = TRUE), .groups=“drop”) |&gt; arrange(desc(hghst_fr_upt)) |&gt; slice_head(n=1) # Athens-Clarke County Unified Government – Bus\n\n\n6.5: Which transit system (agency and mode) had the lowest expenses per VRM?\nUSAGE_AND_FINANCIALS |&gt; filter(UPT &gt;= 1) |&gt; group_by(Agency,Mode) |&gt; summarize(lwst_exp_vrm = sum(Expenses, na.rm = TRUE) / sum(VRM, na.rm = TRUE), .groups=“drop”) |&gt; arrange(lwst_exp_vrm) |&gt; slice_head(n=1) # New Mexico Department of Transportation – Vanpool\n\n\n6.6: Which transit system (agency and mode) had the highest total fares per VRM?\nUSAGE_AND_FINANCIALS |&gt; filter(Total Fares &gt;= 1) |&gt; group_by(Agency,Mode) |&gt; summarize(hghst_fr_vrm = sum(VRM, na.rm = TRUE) / sum(Total Fares, na.rm = TRUE), .groups=“drop”) |&gt; arrange(desc(hghst_fr_vrm)) |&gt; slice_head(n=1) # Athens-Clarke County Unified Government – Bus"
  },
  {
    "objectID": "mp01.html#task-1-rename-column-uza-name-to-metro_area",
    "href": "mp01.html#task-1-rename-column-uza-name-to-metro_area",
    "title": "Mini Project 1",
    "section": "Task 1: Rename column UZA Name to metro_area",
    "text": "Task 1: Rename column UZA Name to metro_area\n\ncolnames(USAGE)\n\n[1] \"NTD ID\"   \"Agency\"   \"UZA Name\" \"Mode\"     \"3 Mode\"   \"month\"    \"UPT\"     \n[8] \"VRM\"     \n\nUSAGE &lt;- USAGE |&gt; rename(\"metro_area\" = \"UZA Name\")\n\ncolnames(USAGE)\n\n[1] \"NTD ID\"     \"Agency\"     \"metro_area\" \"Mode\"       \"3 Mode\"    \n[6] \"month\"      \"UPT\"        \"VRM\""
  },
  {
    "objectID": "mp01.html#task-2-find-unique-modes-impute-with-a-more-understandable-value-using-case-when",
    "href": "mp01.html#task-2-find-unique-modes-impute-with-a-more-understandable-value-using-case-when",
    "title": "Mini Project 1",
    "section": "Task 2: Find unique Modes, impute with a more understandable value using case-when",
    "text": "Task 2: Find unique Modes, impute with a more understandable value using case-when\n\nhead(USAGE)\n\n# A tibble: 6 × 8\n  `NTD ID` Agency      metro_area        Mode  `3 Mode` month         UPT    VRM\n     &lt;int&gt; &lt;chr&gt;       &lt;chr&gt;             &lt;chr&gt; &lt;chr&gt;    &lt;date&gt;      &lt;dbl&gt;  &lt;dbl&gt;\n1        1 King County Seattle--Tacoma,… DR    Bus      2002-01-01 135144 746158\n2        1 King County Seattle--Tacoma,… DR    Bus      2002-02-01 127378 656324\n3        1 King County Seattle--Tacoma,… DR    Bus      2002-03-01 136030 726578\n4        1 King County Seattle--Tacoma,… DR    Bus      2002-04-01 142204 736975\n5        1 King County Seattle--Tacoma,… DR    Bus      2002-05-01 144697 746158\n6        1 King County Seattle--Tacoma,… DR    Bus      2002-06-01 131833 696633\n\nUSAGE |&gt;\n  distinct(Mode) |&gt;\n  arrange(Mode)\n\n# A tibble: 18 × 1\n   Mode \n   &lt;chr&gt;\n 1 AR   \n 2 CB   \n 3 CC   \n 4 CR   \n 5 DR   \n 6 FB   \n 7 HR   \n 8 IP   \n 9 LR   \n10 MB   \n11 MG   \n12 PB   \n13 RB   \n14 SR   \n15 TB   \n16 TR   \n17 VP   \n18 YR   \n\nUSAGE &lt;- USAGE |&gt;\n  mutate(Mode=case_when(\n    Mode == \"AR\" ~ \"Alaska Railroad\",\n    Mode == \"CB\" ~ \"Commuter Bus\",\n    Mode == \"CC\" ~ \"Cable Car\",\n    Mode == \"CR\" ~ \"Commuter Rail\",\n    Mode == \"DR\" ~ \"Demand Response\",\n    Mode == \"FB\" ~ \"Ferryboat\",\n    Mode == \"HR\" ~ \"Heavy Rail\",\n    Mode == \"IP\" ~ \"Inclined Plane\",\n    Mode == \"LR\" ~ \"Light Rail\",\n    Mode == \"MB\" ~ \"Bus\",\n    Mode == \"MG\" ~ \"Monorail and Automated Guideway modes\",\n    Mode == \"PB\" ~ \"Publico\",\n    Mode == \"RB\" ~ \"Bus Rapid Transit\",\n    Mode == \"SR\" ~ \"Streetcar Rail\",\n    Mode == \"TB\" ~ \"Trolleybus\",\n    Mode == \"TR\" ~ \"Aerial Tramways\",\n    Mode == \"VP\" ~ \"Vanpool\",\n    Mode == \"YR\" ~ \"Hybrid Rail\",\n    TRUE ~ \"Unknown\"))\n\nhead(USAGE)\n\n# A tibble: 6 × 8\n  `NTD ID` Agency      metro_area        Mode  `3 Mode` month         UPT    VRM\n     &lt;int&gt; &lt;chr&gt;       &lt;chr&gt;             &lt;chr&gt; &lt;chr&gt;    &lt;date&gt;      &lt;dbl&gt;  &lt;dbl&gt;\n1        1 King County Seattle--Tacoma,… Dema… Bus      2002-01-01 135144 746158\n2        1 King County Seattle--Tacoma,… Dema… Bus      2002-02-01 127378 656324\n3        1 King County Seattle--Tacoma,… Dema… Bus      2002-03-01 136030 726578\n4        1 King County Seattle--Tacoma,… Dema… Bus      2002-04-01 142204 736975\n5        1 King County Seattle--Tacoma,… Dema… Bus      2002-05-01 144697 746158\n6        1 King County Seattle--Tacoma,… Dema… Bus      2002-06-01 131833 696633\n\nUSAGE |&gt;\n  distinct(Mode) |&gt;\n  arrange(Mode)\n\n# A tibble: 18 × 1\n   Mode                                 \n   &lt;chr&gt;                                \n 1 Aerial Tramways                      \n 2 Alaska Railroad                      \n 3 Bus                                  \n 4 Bus Rapid Transit                    \n 5 Cable Car                            \n 6 Commuter Bus                         \n 7 Commuter Rail                        \n 8 Demand Response                      \n 9 Ferryboat                            \n10 Heavy Rail                           \n11 Hybrid Rail                          \n12 Inclined Plane                       \n13 Light Rail                           \n14 Monorail and Automated Guideway modes\n15 Publico                              \n16 Streetcar Rail                       \n17 Trolleybus                           \n18 Vanpool                              \n\nUSAGE &lt;- USAGE |&gt;     rename( \"unlinked_passenger_trips\" = \"UPT\",\n                              \"vehicle_revenue_miles\" = \"VRM\") |&gt;\n  select( -`NTD ID`,\n          -`3 Mode`)\n\nsample_n(USAGE, 1000) |&gt; \n    mutate(month=as.character(month)) |&gt; \n    DT::datatable()"
  },
  {
    "objectID": "mp01.html#task-3-answer-specific-questions",
    "href": "mp01.html#task-3-answer-specific-questions",
    "title": "Mini Project 1",
    "section": "Task 3: Answer specific questions",
    "text": "Task 3: Answer specific questions\n\nhead(USAGE)\n\n# A tibble: 6 × 6\n  Agency      metro_area          Mode         month      unlinked_passenger_t…¹\n  &lt;chr&gt;       &lt;chr&gt;               &lt;chr&gt;        &lt;date&gt;                      &lt;dbl&gt;\n1 King County Seattle--Tacoma, WA Demand Resp… 2002-01-01                 135144\n2 King County Seattle--Tacoma, WA Demand Resp… 2002-02-01                 127378\n3 King County Seattle--Tacoma, WA Demand Resp… 2002-03-01                 136030\n4 King County Seattle--Tacoma, WA Demand Resp… 2002-04-01                 142204\n5 King County Seattle--Tacoma, WA Demand Resp… 2002-05-01                 144697\n6 King County Seattle--Tacoma, WA Demand Resp… 2002-06-01                 131833\n# ℹ abbreviated name: ¹​unlinked_passenger_trips\n# ℹ 1 more variable: vehicle_revenue_miles &lt;dbl&gt;\n\n\n\n3.1: Which transit agency had the most total VRM in this sample?\n\n# A grouped summarize that takes the first returned item in descending order should get that\nUSAGE |&gt;\n  group_by(Agency) |&gt;\n  summarize(n_vrm = n()) |&gt;\n  arrange(desc(n_vrm)) |&gt;\n  slice_head(n=1)\n\n# A tibble: 1 × 2\n  Agency                         n_vrm\n  &lt;chr&gt;                          &lt;int&gt;\n1 New Jersey Transit Corporation  2048\n\n\nAnswer: New Jersey Transit Corporation with 2,048\n\n\n3.2: Which transit mode had the most total VRM in this sample?\n\n# Same code as 3.1 but replacing Agency with Mode\nUSAGE |&gt;\n  group_by(Mode) |&gt;\n  summarize(n_vrm = n()) |&gt;\n  arrange(desc(n_vrm)) |&gt;\n  slice_head(n=1)\n\n# A tibble: 1 × 2\n  Mode             n_vrm\n  &lt;chr&gt;            &lt;int&gt;\n1 Demand Response 115701\n\n\nAnswer: Demand Response with 115,701\n\n\n3.3: How many trips were taken on the NYC Subway (Heavy Rail) in May 2024?\n\n#install.packages(\"stringr\")\nlibrary(stringr)\n\n# First checking to ensure that May 2024 is only denoted by 2024-05-01\nUSAGE |&gt;\n  filter(str_detect(month, \"2024-05-\")) |&gt;\n  distinct(month) #checks out\n\n# A tibble: 1 × 1\n  month     \n  &lt;date&gt;    \n1 2024-05-01\n\n# Ensuring I get the right Agency name\nUSAGE |&gt;\n  filter(str_detect(Agency,\"MTA\")) |&gt;\n  distinct(Agency)\n\n# A tibble: 4 × 1\n  Agency                                                              \n  &lt;chr&gt;                                                               \n1 MTA New York City Transit                                           \n2 Metro-North Commuter Railroad Company, dba: MTA Metro-North Railroad\n3 MTA Long Island Rail Road                                           \n4 MTA Bus Company                                                     \n\n# Unlinked Passenger Trips (UPT) are defined as:\n# The number of passengers who board public transportation vehicles.\n# Passengers are counted each time they board vehicles\n# no matter how many vehicles they use to travel from their origin\n# to their destination.\n\n\nUSAGE |&gt;\n  filter(month == '2024-05-01',\n         Agency == \"MTA New York City Transit\",\n         Mode == \"Heavy Rail\") |&gt;\n  select(unlinked_passenger_trips)\n\n# A tibble: 1 × 1\n  unlinked_passenger_trips\n                     &lt;dbl&gt;\n1                180458819\n\n\nAnswer: 180,458,819 trips\n\n\n3.4: Which Mode of transport had the longest average trip in May 2024?\n\nUSAGE |&gt;\n  filter(month == '2024-05-01') |&gt;\n  group_by(Mode) |&gt;\n  summarize(trips_avg = mean(unlinked_passenger_trips)) |&gt;\n  arrange(desc(trips_avg)) |&gt;\n  slice_head(n=1)\n\n# A tibble: 1 × 2\n  Mode       trips_avg\n  &lt;chr&gt;          &lt;dbl&gt;\n1 Heavy Rail 14836486.\n\n\nAnswer: Heavy Rail, with 14,836,486 average trips (I did this question before 3.4 was marked as unneccesary due to not having the correct feature to run this analysis, but I’ve left it in regardless)\n\n\n3.5: How much did NYC Subway ridership fall between April 2019 and April 2020?\n\nUSAGE |&gt;\n  filter(Agency == \"MTA New York City Transit\",\n         Mode == \"Heavy Rail\",\n         month &gt;= '2019-04-01',\n         month &lt; '2020-05-01') |&gt;\n  select(unlinked_passenger_trips)\n\n# A tibble: 13 × 1\n   unlinked_passenger_trips\n                      &lt;dbl&gt;\n 1                232223929\n 2                235967209\n 3                224274463\n 4                229774505\n 5                229171856\n 6                230694038\n 7                253609943\n 8                235137305\n 9                236357677\n10                231863427\n11                227432375\n12                119654860\n13                 20254269\n\n# Let's plot the ridership numbers\nif(!require(\"ggplot2\")) install.packages(\"ggplot2\")\nif(!require(\"lubridate\")) install.packages(\"lubridate\")\n\nlibrary(ggplot2)\nlibrary(lubridate)\n\ndates &lt;- seq(ymd(\"2019-04-01\"), by = \"month\", length.out = 13)\nridership &lt;- c(USAGE |&gt;\n                 filter(month &gt;= '2019-04-01',\n                        month &lt; '2020-05-01',\n                        Agency == 'MTA New York City Transit',\n                        Mode == 'Heavy Rail'))\n\n# Create a data frame\ndata &lt;- data.frame(Date = dates, Ridership = ridership)\n\nif(!require(\"scales\")) install.packages(\"scales\")\n\nLoading required package: scales\n\n\n\nAttaching package: 'scales'\n\n\nThe following object is masked from 'package:purrr':\n\n    discard\n\n\nThe following object is masked from 'package:readr':\n\n    col_factor\n\nlibrary(scales)\n\n# Plot ridership over time\nggplot(data, aes(x = Date, y = Ridership.unlinked_passenger_trips)) +  # Change x and y accordingly\n  geom_line() +\n  geom_point() +\n  labs(title = \"NYC Subway Ridership from April 2019 through April 2020\", x = \"Date\", y = \"Total Trips\") +\n  scale_y_continuous(labels = label_number()) +  # Prevent scientific notation\n  theme_minimal() +\n  theme(\n    plot.title = element_text(hjust = 0.5, size = 16, face = \"bold\"),  # Center the title and make it bold\n    axis.title.x = element_text(size = 14),  # Change x-axis title size\n    axis.title.y = element_text(size = 14),  # Change y-axis title size\n    axis.text = element_text(size = 12),  # Change axis text size\n    panel.grid.minor = element_blank()  # Remove minor grid lines\n  )"
  },
  {
    "objectID": "mp01.html#task-4-find-3-more-interesting-facts-in-this-data",
    "href": "mp01.html#task-4-find-3-more-interesting-facts-in-this-data",
    "title": "Mini Project 1",
    "section": "Task 4: Find 3 more interesting facts in this data",
    "text": "Task 4: Find 3 more interesting facts in this data\n\nhead(USAGE, n=7)\n\n# A tibble: 7 × 6\n  Agency      metro_area          Mode         month      unlinked_passenger_t…¹\n  &lt;chr&gt;       &lt;chr&gt;               &lt;chr&gt;        &lt;date&gt;                      &lt;dbl&gt;\n1 King County Seattle--Tacoma, WA Demand Resp… 2002-01-01                 135144\n2 King County Seattle--Tacoma, WA Demand Resp… 2002-02-01                 127378\n3 King County Seattle--Tacoma, WA Demand Resp… 2002-03-01                 136030\n4 King County Seattle--Tacoma, WA Demand Resp… 2002-04-01                 142204\n5 King County Seattle--Tacoma, WA Demand Resp… 2002-05-01                 144697\n6 King County Seattle--Tacoma, WA Demand Resp… 2002-06-01                 131833\n7 King County Seattle--Tacoma, WA Demand Resp… 2002-07-01                 137547\n# ℹ abbreviated name: ¹​unlinked_passenger_trips\n# ℹ 1 more variable: vehicle_revenue_miles &lt;dbl&gt;\n\n\n\n4.1: What’s the most miles traveled by agency + mode and how does it compare to the number of trips?\n\nUSAGE |&gt;\n  group_by(Agency, Mode) |&gt;\n  summarize(total_travel = sum(vehicle_revenue_miles, na.rm = TRUE), .groups=\"drop\") |&gt;\n  arrange(desc(total_travel)) |&gt;\n  slice_head(n=3)\n\n# A tibble: 3 × 3\n  Agency                                                   Mode     total_travel\n  &lt;chr&gt;                                                    &lt;chr&gt;           &lt;dbl&gt;\n1 MTA New York City Transit                                Heavy R…   7732916753\n2 New Jersey Transit Corporation                           Bus        3781858802\n3 Los Angeles County Metropolitan Transportation Authority Bus        3501202902\n\n\nNYC Subway leads the way in revenue miles, followed by NJT Bus and LA Bus\n\nUSAGE |&gt;\n  group_by(Agency, Mode) |&gt;\n  summarize(total_travel = sum(unlinked_passenger_trips, na.rm = TRUE), .groups=\"drop\") |&gt;\n  arrange(desc(total_travel)) |&gt;\n  slice_head(n=3)\n\n# A tibble: 3 × 3\n  Agency                                                   Mode     total_travel\n  &lt;chr&gt;                                                    &lt;chr&gt;           &lt;dbl&gt;\n1 MTA New York City Transit                                Heavy R…  51672094135\n2 MTA New York City Transit                                Bus       16889723939\n3 Los Angeles County Metropolitan Transportation Authority Bus        7114375207\n\n\nNYC Subway leads the way here as well, while NJT Bus is overtaken by NYC’s bus system. The distance between the MTA and the next few is quite large.\n\n\n4.2 Which Agency manages the most Modes?\n\nUSAGE |&gt;\n  group_by(Agency) |&gt;\n  summarize(total_modes = n_distinct(Mode)) |&gt;\n  arrange(desc(total_modes)) # Massachusetts Bay Transportation Authority\n\n# A tibble: 677 × 2\n   Agency                                                   total_modes\n   &lt;chr&gt;                                                          &lt;int&gt;\n 1 Massachusetts Bay Transportation Authority                         7\n 2 Central Oklahoma Transportation and Parking Authority              6\n 3 City and County of San Francisco                                   6\n 4 City of Charlotte North Carolina                                   6\n 5 County of Miami-Dade                                               6\n 6 Dallas Area Rapid Transit                                          6\n 7 King County                                                        6\n 8 Los Angeles County Metropolitan Transportation Authority           6\n 9 Maryland Transit Administration                                    6\n10 Metropolitan Transit Authority of Harris County, Texas             6\n# ℹ 667 more rows\n\n\n\n\n4.3 Which date saw the most usage for the NYC Subway?\n\nUSAGE |&gt;\n  filter(Agency == 'MTA New York City Transit',\n         Mode == 'Heavy Rail') |&gt;\n  group_by(month) |&gt;\n  summarize(most_trips = sum(unlinked_passenger_trips, na.rm = TRUE)) |&gt;\n  arrange(desc(most_trips)) |&gt;\n  slice_head(n=1) # 2019-10-01\n\n# A tibble: 1 × 2\n  month      most_trips\n  &lt;date&gt;          &lt;dbl&gt;\n1 2019-10-01  253609943\n\n# conversely, which had the fewest?\nUSAGE |&gt;\n  filter(Agency == 'MTA New York City Transit',\n         Mode == 'Heavy Rail') |&gt;\n  group_by(month) |&gt;\n  summarize(most_trips = sum(unlinked_passenger_trips, na.rm = TRUE)) |&gt;\n  arrange((most_trips)) |&gt;\n  slice_head(n=1) # 2020-04-01\n\n# A tibble: 1 × 2\n  month      most_trips\n  &lt;date&gt;          &lt;dbl&gt;\n1 2020-04-01   20254269\n\n\n2019-10-01 had the most while 2020-04-01 had the fewest"
  },
  {
    "objectID": "mp01.html#task-5-create-a-new-table-with-annual-total-sum-for-upt-and-vrm-for-2022",
    "href": "mp01.html#task-5-create-a-new-table-with-annual-total-sum-for-upt-and-vrm-for-2022",
    "title": "Mini Project 1",
    "section": "Task 5: Create a new table with annual total (sum) for UPT and VRM for 2022",
    "text": "Task 5: Create a new table with annual total (sum) for UPT and VRM for 2022\n\nUSAGE &lt;- inner_join(TRIPS, MILES) |&gt;\n  mutate(`NTD ID` = as.integer(`NTD ID`))\n\nJoining with `by = join_by(`NTD ID`, Agency, `UZA Name`, Mode, `3 Mode`,\nmonth)`\n\nUSAGE &lt;- USAGE |&gt;\n  mutate(Mode=case_when(\n    Mode == \"AR\" ~ \"Alaska Railroad\",\n    Mode == \"CB\" ~ \"Commuter Bus\",\n    Mode == \"CC\" ~ \"Cable Car\",\n    Mode == \"CR\" ~ \"Commuter Rail\",\n    Mode == \"DR\" ~ \"Demand Response\",\n    Mode == \"FB\" ~ \"Ferryboat\",\n    Mode == \"HR\" ~ \"Heavy Rail\",\n    Mode == \"IP\" ~ \"Inclined Plane\",\n    Mode == \"LR\" ~ \"Light Rail\",\n    Mode == \"MB\" ~ \"Bus\",\n    Mode == \"MG\" ~ \"Monorail and Automated Guideway modes\",\n    Mode == \"PB\" ~ \"Publico\",\n    Mode == \"RB\" ~ \"Bus Rapid Transit\",\n    Mode == \"SR\" ~ \"Streetcar Rail\",\n    Mode == \"TB\" ~ \"Trolleybus\",\n    Mode == \"TR\" ~ \"Aerial Tramways\",\n    Mode == \"VP\" ~ \"Vanpool\",\n    Mode == \"YR\" ~ \"Hybrid Rail\",\n    TRUE ~ \"Unknown\"))\n\n\nUSAGE_2022_ANNUAL &lt;- USAGE |&gt;\n  select(-`3 Mode`) |&gt;\n  rename(\"metro_area\" = \"UZA Name\") |&gt;\n  filter(year(month)=='2022') |&gt;\n  group_by(`NTD ID`, `Agency`,`metro_area`,`Mode`) |&gt;\n  summarize(UPT = sum(UPT),\n            VRM = sum(VRM)) |&gt;\n  ungroup()\n\n`summarise()` has grouped output by 'NTD ID', 'Agency', 'metro_area'. You can\noverride using the `.groups` argument.\n\nhead(USAGE_2022_ANNUAL, n=2)\n\n# A tibble: 2 × 6\n  `NTD ID` Agency      metro_area          Mode                 UPT      VRM\n     &lt;int&gt; &lt;chr&gt;       &lt;chr&gt;               &lt;chr&gt;              &lt;dbl&gt;    &lt;dbl&gt;\n1        1 King County Seattle--Tacoma, WA Bus             53983641 61632644\n2        1 King County Seattle--Tacoma, WA Demand Response   663009 12860448\n\nFINANCIALS &lt;- FINANCIALS |&gt;\n  mutate(Mode=case_when(\n    Mode == \"AR\" ~ \"Alaska Railroad\",\n    Mode == \"CB\" ~ \"Commuter Bus\",\n    Mode == \"CC\" ~ \"Cable Car\",\n    Mode == \"CR\" ~ \"Commuter Rail\",\n    Mode == \"DR\" ~ \"Demand Response\",\n    Mode == \"FB\" ~ \"Ferryboat\",\n    Mode == \"HR\" ~ \"Heavy Rail\",\n    Mode == \"IP\" ~ \"Inclined Plane\",\n    Mode == \"LR\" ~ \"Light Rail\",\n    Mode == \"MB\" ~ \"Bus\",\n    Mode == \"MG\" ~ \"Monorail and Automated Guideway modes\",\n    Mode == \"PB\" ~ \"Publico\",\n    Mode == \"RB\" ~ \"Bus Rapid Transit\",\n    Mode == \"SR\" ~ \"Streetcar Rail\",\n    Mode == \"TB\" ~ \"Trolleybus\",\n    Mode == \"TR\" ~ \"Aerial Tramways\",\n    Mode == \"VP\" ~ \"Vanpool\",\n    Mode == \"YR\" ~ \"Hybrid Rail\",\n    TRUE ~ \"Unknown\"))\n\n\nUSAGE_AND_FINANCIALS &lt;- left_join(USAGE_2022_ANNUAL,\n                                  FINANCIALS,\n                                  join_by(`NTD ID`, `Mode`)) |&gt;\n  drop_na()\n\n\nhead(USAGE_AND_FINANCIALS,n=7)\n\n# A tibble: 7 × 9\n  `NTD ID` Agency     metro_area Mode     UPT    VRM `Agency Name` `Total Fares`\n     &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;      &lt;chr&gt;  &lt;dbl&gt;  &lt;dbl&gt; &lt;chr&gt;                 &lt;dbl&gt;\n1        1 King Coun… Seattle--… Bus   5.40e7 6.16e7 King County …      56566150\n2        1 King Coun… Seattle--… Bus   5.40e7 6.16e7 King County …        280187\n3        1 King Coun… Seattle--… Dema… 6.63e5 1.29e7 King County …        740726\n4        1 King Coun… Seattle--… Dema… 6.63e5 1.29e7 King County …         91601\n5        1 King Coun… Seattle--… Ferr… 4.00e5 5.12e4 King County …       1715265\n6        1 King Coun… Seattle--… Stre… 1.12e6 1.80e5 King County …        588495\n7        1 King Coun… Seattle--… Trol… 9.58e6 2.64e6 King County …      10123486\n# ℹ 1 more variable: Expenses &lt;dbl&gt;"
  },
  {
    "objectID": "mp01.html#task-6-answer-the-following-6-questions-using-usage_and_financials",
    "href": "mp01.html#task-6-answer-the-following-6-questions-using-usage_and_financials",
    "title": "Mini Project 1",
    "section": "Task 6: Answer the following 6 questions using USAGE_AND_FINANCIALS",
    "text": "Task 6: Answer the following 6 questions using USAGE_AND_FINANCIALS\n\n6.1: Which transit system (agency and mode) had the most UPT in 2022?\n\nUSAGE_AND_FINANCIALS |&gt;\n  group_by(`Agency`, `Mode`) |&gt;\n  summarize(Total_UPT = sum(UPT, na.rm=TRUE), .groups=\"drop\") |&gt;\n  arrange(desc(Total_UPT)) |&gt;\n  slice_head(n=1)\n\n# A tibble: 1 × 3\n  Agency                    Mode        Total_UPT\n  &lt;chr&gt;                     &lt;chr&gt;           &lt;dbl&gt;\n1 MTA New York City Transit Heavy Rail 1793073801\n\n\nMTA New York City Transit – Heavy Rail\n\n\n6.2: Which transit system (agency and mode) had the highest farebox recovery, defined as the highest ratio of Total Fares to Expenses?\n\nUSAGE_AND_FINANCIALS |&gt;\n  group_by(`Agency`,`Mode`) |&gt;\n  summarize(fbx_rcv = sum(`Total Fares`, na.rm = TRUE) / sum(`Expenses`, na.rm = TRUE), .groups=\"drop\") |&gt;\n  arrange(desc(fbx_rcv)) |&gt;\n  slice_head(n=1)\n\n# A tibble: 1 × 3\n  Agency                                Mode    fbx_rcv\n  &lt;chr&gt;                                 &lt;chr&gt;     &lt;dbl&gt;\n1 Transit Authority of Central Kentucky Vanpool    2.38\n\n\nTransit Authority of Central Kentucky – Vanpool\n\n\n6.3: Which transit system (agency and mode) had the lowest expenses per UPT?\n\nUSAGE_AND_FINANCIALS |&gt;\n  filter(UPT &gt;= 1) |&gt;\n  group_by(`Agency`,`Mode`) |&gt;\n  summarize(lwst_exp_upt =  sum(`Expenses`, na.rm = TRUE) / sum(`UPT`, na.rm = TRUE), .groups=\"drop\") |&gt;\n  arrange(lwst_exp_upt) |&gt;\n  slice_head(n=1)\n\n# A tibble: 1 × 3\n  Agency                          Mode  lwst_exp_upt\n  &lt;chr&gt;                           &lt;chr&gt;        &lt;dbl&gt;\n1 North Carolina State University Bus           1.18\n\n\nNorth Caroline State University – Bus\n\n\n6.4: Which transit system (agency and mode) had the highest total fares per UPT?\n\nUSAGE_AND_FINANCIALS |&gt;\n  filter(`Total Fares` &gt;= 1) |&gt;\n  group_by(`Agency`,`Mode`) |&gt;\n  summarize(hghst_fr_upt = sum(`UPT`, na.rm = TRUE) / sum(`Total Fares`, na.rm = TRUE), .groups=\"drop\") |&gt;\n  # summarize(hghst_fr_upt = sum(`UPT`, na.rm = TRUE) / sum(`Total Fares`, na.rm = TRUE), .groups=\"drop\")  |&gt;\n  arrange(desc(hghst_fr_upt)) |&gt;\n  slice_head(n=1)\n\n# A tibble: 1 × 3\n  Agency                                  Mode  hghst_fr_upt\n  &lt;chr&gt;                                   &lt;chr&gt;        &lt;dbl&gt;\n1 Athens-Clarke County Unified Government Bus         522940\n\n\nAthens-Clarke County Unified Government – Bus\n\n\n6.5: Which transit system (agency and mode) had the lowest expenses per VRM?\n\nUSAGE_AND_FINANCIALS |&gt;\n  filter(UPT &gt;= 1) |&gt;\n  group_by(`Agency`,`Mode`) |&gt;\n  summarize(lwst_exp_vrm = sum(`Expenses`, na.rm = TRUE) / sum(`VRM`, na.rm = TRUE), .groups=\"drop\") |&gt;\n  arrange(lwst_exp_vrm) |&gt;\n  slice_head(n=1)\n\n# A tibble: 1 × 3\n  Agency                                  Mode    lwst_exp_vrm\n  &lt;chr&gt;                                   &lt;chr&gt;          &lt;dbl&gt;\n1 New Mexico Department of Transportation Vanpool        0.337\n\n\nNew Mexico Department of Transportation – Vanpool\n\n\n6.6: Which transit system (agency and mode) had the highest total fares per VRM?\n\nUSAGE_AND_FINANCIALS |&gt;\n  filter(`Total Fares` &gt;= 1) |&gt;\n  group_by(`Agency`,`Mode`) |&gt;\n  summarize(hghst_fr_vrm = sum(`VRM`, na.rm = TRUE) / sum(`Total Fares`, na.rm = TRUE), .groups=\"drop\") |&gt;\n  arrange(desc(hghst_fr_vrm)) |&gt;\n  slice_head(n=1)\n\n# A tibble: 1 × 3\n  Agency                                  Mode  hghst_fr_vrm\n  &lt;chr&gt;                                   &lt;chr&gt;        &lt;dbl&gt;\n1 Athens-Clarke County Unified Government Bus         380687\n\n\nAthens-Clarke County Unified Government – Bus"
  },
  {
    "objectID": "mp02.html",
    "href": "mp02.html",
    "title": "Mini Project 2",
    "section": "",
    "text": "Introduction\nFor STA 9750 Mini Project 2, I’m going to propose remaking a classic movie: Independence Day.\n\n\nPitch\nOriginally released in 1996 and starring Will Smith, this film depicts Earth’s fight for freedom from an alien invasion.\nStarring Jacob Batalon in his breakout role as Captain Steven Hiller and famous robo-freedom-fighter John DiMaggio as David Levinson, this film follows an ensemble of characters as they look to save Earth from the new threat from the aliens of Omicron Persei 10.\n\n\n\nJacob Batalon\n\n\n\n\n\nJohn DiMaggio\n\n\nDirected by Glass Onion and Knives Out director Rian Johnson, the action behind this film belies the mystery of the Omicronians and their true plot.\n\n\n\nlinked from GIPHY\n\n\n\n\nHow we got here\nNow that I’ve thoroughly grabbed your attention, how the heck did we come up with this cast of characters?\nAfter sorting through IMDb data, these three just truly spoke to us and we knew we were on to something.\n\n\nTask 1: In which the data is gathered\nSince we’re doing this in R, let’s get some code going\n\n# Install and import packages\nif(!require(\"ggplot2\")) install.packages(\"ggplot2\")\nif(!require(\"tidyverse\")) install.packages(\"tidyverse\")\nif(!require(\"dplyr\")) install.packages(\"dplyr\")\nif(!require(\"glue\")) install.packages(\"glue\")\nif(!require(\"scales\")) install.packages(\"scales\")\nif(!require(\"psych\")) install.packages(\"psych\")\nif(!require(\"plotly\")) install.packages(\"plotly\")\n\nlibrary(ggplot2)\nlibrary(tidyverse)\nlibrary(dplyr)\nlibrary(glue)\nlibrary(scales)\nlibrary(psych)\nlibrary(plotly)"
  }
]